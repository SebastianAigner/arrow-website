"use strict";(self.webpackChunkarrow_website=self.webpackChunkarrow_website||[]).push([[1385],{63744:(t,o,e)=>{e.r(o),e.d(o,{assets:()=>s,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>m});var n=e(85893),a=e(11151);const i={title:"FP with Kotlin/Arrow: Monad Comprehensions & Parallel Processing",image:"https://img.youtube.com/vi/nAtzuIRryuE/maxresdefault.jpg",category:"videos",tags:["fx","videos"],link:"https://youtu.be/nAtzuIRryuE"},r=void 0,l={permalink:"/community/blog/2020/02/26/fp-with-kotlin-arrow",editUrl:"https://github.com/arrow-kt/arrow-website/edit/main/content/blog/2020-02-26-fp-with-kotlin-arrow.md",source:"@site/content/blog/2020-02-26-fp-with-kotlin-arrow.md",title:"FP with Kotlin/Arrow: Monad Comprehensions & Parallel Processing",description:"Arrow has multiple libraries available for functional programming. In this talk we'll focus on Arrow FX and learn how to handle IO in a functional way with an introduction to monadic composition. Then we'll examine how to compose monads in a cleaner fashion with Arrow FX's monad comprehensions. Finally, we'll take a look at how to parallelize IO monads with parallel map strategies.",date:"2020-02-26T00:00:00.000Z",formattedDate:"February 26, 2020",tags:[{label:"fx",permalink:"/community/blog/tags/fx"},{label:"videos",permalink:"/community/blog/tags/videos"}],readingTime:.315,hasTruncateMarker:!1,authors:[],frontMatter:{title:"FP with Kotlin/Arrow: Monad Comprehensions & Parallel Processing",image:"https://img.youtube.com/vi/nAtzuIRryuE/maxresdefault.jpg",category:"videos",tags:["fx","videos"],link:"https://youtu.be/nAtzuIRryuE"},unlisted:!1,prevItem:{title:"IO integration with kotlinx.coroutines",permalink:"/community/blog/2020/03/02/io-integration-kotlinx-coroutines"},nextItem:{title:"What could possibly go wrong? - A safer programming with Arrow",permalink:"/community/blog/2020/02/26/safer-programming-with-arrow"}},s={authorsImageUrls:[]},m=[];function c(t){const o={p:"p",...(0,a.a)(),...t.components};return(0,n.jsx)(o.p,{children:"Arrow has multiple libraries available for functional programming. In this talk we'll focus on Arrow FX and learn how to handle IO in a functional way with an introduction to monadic composition. Then we'll examine how to compose monads in a cleaner fashion with Arrow FX's monad comprehensions. Finally, we'll take a look at how to parallelize IO monads with parallel map strategies."})}function u(t={}){const{wrapper:o}={...(0,a.a)(),...t.components};return o?(0,n.jsx)(o,{...t,children:(0,n.jsx)(c,{...t})}):c(t)}},11151:(t,o,e)=>{e.d(o,{Z:()=>l,a:()=>r});var n=e(67294);const a={},i=n.createContext(a);function r(t){const o=n.useContext(i);return n.useMemo((function(){return"function"==typeof t?t(o):{...o,...t}}),[o,t])}function l(t){let o;return o=t.disableParentContext?"function"==typeof t.components?t.components(a):t.components||a:r(t.components),n.createElement(i.Provider,{value:o},t.children)}}}]);